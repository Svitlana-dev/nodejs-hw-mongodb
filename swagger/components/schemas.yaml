Contact:
  type: object
  properties:
    id: { type: string, example: '66b6f7f4c8d3a0c0c7a9b111' }
    name: { type: string, example: 'John Doe' }
    phoneNumber: { type: string, example: '+380501112233' }
    email: { type: string, nullable: true, example: 'john@example.com' }
    isFavourite: { type: boolean, example: false }
    contactType:
      type: string
      enum: [work, home, personal]
      example: personal
    avatarUrl:
      type: string
      nullable: true
      example: 'https://res.cloudinary.com/demo/image/upload/avatar.jpg'
    createdAt: { type: string, format: date-time }
    updatedAt: { type: string, format: date-time }
  required: [id, name, phoneNumber]

ContactCreateFormData:
  type: object
  properties:
    name: { type: string }
    phoneNumber: { type: string }
    email: { type: string, format: email }
    isFavourite: { type: boolean }
    contactType: { type: string, enum: [work, home, personal] }
    avatar:
      type: string
      format: binary
  required: [name, phoneNumber]

ContactUpdateFormData:
  type: object
  properties:
    name: { type: string }
    phoneNumber: { type: string }
    email: { type: string, format: email }
    isFavourite: { type: boolean }
    contactType: { type: string, enum: [work, home, personal] }
    avatar:
      type: string
      format: binary
  minProperties: 1

ContactsList:
  type: object
  properties:
    items:
      type: array
      items: { $ref: '#/Contact' }
    page: { type: integer, example: 1 }
    perPage: { type: integer, example: 10 }
    total: { type: integer, example: 0 }

ResponseOk:
  type: object
  properties:
    status: { type: integer, example: 200 }
    message: { type: string, example: 'Success' }
    data: { nullable: true }

ResponseError:
  type: object
  properties:
    status: { type: integer, example: 400 }
    message: { type: string, example: 'Validation error' }
    data: { nullable: true }
